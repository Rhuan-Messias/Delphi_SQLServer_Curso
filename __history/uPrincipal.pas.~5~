unit uPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, uDTMConexao;

type
  TfrmPrincipal = class(TForm)
    mainPrincipal: TMainMenu;
    Cadastro1: TMenuItem;
    MOVIMENTAO1: TMenuItem;
    CLIENTE1: TMenuItem;
    CLIENTE2: TMenuItem;
    CATEGORIA1: TMenuItem;
    CATEGORIA2: TMenuItem;
    N1: TMenuItem;
    mnuFechar: TMenuItem;
    VENDA1: TMenuItem;
    RELATRIO1: TMenuItem;
    RELATRIO2: TMenuItem;
    N3: TMenuItem;
    N4: TMenuItem;
    N5: TMenuItem;
    N6: TMenuItem;
    procedure mnuFecharClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation

{$R *.dfm}

procedure TfrmPrincipal.FormCreate(Sender: TObject);
begin
  {O formulário da conexão recebe a classe desse formulário, com o atributo
  Create. Esse atributo pede uma unit para ser dona da criação, no caso Self
  indica que este formulário principal será o owner. O ponto indica que vou
  usar um componente que está dentro dessa classe.
  Por exemplo, dentro do formulário dtmPrincipal, eu tenho o componente ConexaoDB
  e dentro desse componente eu tenho determinados atributos e métodos}
  //Criei um formulario, pedi para mostrar ampulheta quando conectado e pedi a
  //conexao
  dtmPrincipal := TdtmPrincipal.Create(Self);
  dtmPrincipal.ConexaoDB.SQLHourGlass := true;
  dtmPrincipal.ConexaoDB.Connected := true;

end;

procedure TfrmPrincipal.mnuFecharClick(Sender: TObject);
begin
  //Close;
  Application.Terminate;
end;

end.
